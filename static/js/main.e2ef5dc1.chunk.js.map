{"version":3,"sources":["components/Square.js","components/Board.js","components/calculateWinner.js","components/Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","squares","this","cols","map","i","j","id","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","movePos","stepNumber","xIsNext","isReversed","slice","setState","concat","step","status","current","winner","moves","move","desc","col","row","Math","floor","inputStyle","fontWeight","jumpTo","style","handleClick","reverse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2ef5dc1.chunk.js","sourcesContent":["export default function Square(props) {\r\n    return (\r\n        <button\r\n            className=\"square\"\r\n            onClick={props.onClick}\r\n        >\r\n            { props.value }\r\n        </button>\r\n    )\r\n}","import React from 'react';\r\nimport Square from '../components/Square';\r\n\r\nexport class Board extends React.Component {    \r\n    render() {\r\n        const squares = this.props.squares;\r\n        const rows = [0, 1, 2];\r\n        const cols = [0, 1, 2];\r\n\r\n        return (            \r\n            <div>\r\n                { rows.map( i =>\r\n                    <div className=\"board-row\">\r\n                        { cols.map( j =>\r\n                            <Square\r\n                                id = { \"square-\" + (i*3 + j) }\r\n                                value = {squares[i*3 + j]}\r\n                                onClick = {() => this.props.onClick(i*3 + j)}\r\n                            />\r\n                        ) }\r\n                    </div>\r\n                ) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","export default function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n      ];\r\n      for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n          return squares[a];\r\n        }\r\n      }\r\n    return null;\r\n}","import React from 'react'\r\nimport Board from '../components/Board';\r\nimport calculateWinner from '../components/calculateWinner';\r\n\r\nexport class Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n                movePos: null,\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            isReversed: false,\r\n        }\r\n    }\r\n      \r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length-1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n                movePos: i,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n    \r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n    \r\n        const moves = history.map((step, move) => {\r\n            let desc;\r\n            if (move) {\r\n                let col = step.movePos % 3 + 1;\r\n                let row = Math.floor(step.movePos/3) + 1;\r\n                desc = 'Move #' + move + ' ( col-' + col + ', row-' + row + ')';\r\n            } else {\r\n                desc = 'Game start';\r\n            };\r\n\r\n            let inputStyle = {}\r\n            if (move == this.state.stepNumber) {\r\n                inputStyle = {\r\n                    fontWeight:'bold'\r\n                };\r\n            }\r\n\r\n            return (\r\n                <li key={move}>\r\n                <button\r\n                    onClick={() => this.jumpTo(move)}\r\n                    style={inputStyle}\r\n                >\r\n                    {desc}\r\n                </button>\r\n                </li>\r\n            );\r\n        });\r\n    \r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n    \r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                <Board \r\n                    squares={current.squares}\r\n                    onClick={(i) => this.handleClick(i)}\r\n                />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{ this.state.isReversed ? moves.reverse() : moves }</ol>\r\n                    <button\r\n                        onClick={() => this.setState({ isReversed: !this.state.isReversed })}\r\n                    >Reverse moves order</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport Game from './components/Game';\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}